// All the same but... {1} 
function Animal(name) {
	this.name = name;
	this.x = 0;
}

Animal.prototype.getName = function() {
	return this.name
};

// {1} Call Animal constructor in Child constructor
function Dog(name) {
	Animal.call(this, name)
}

Dog.prototype = Object.create(Animal.prototype);  // New type of inheritence - inherit only prototype
Dog.prototype.constructor = Dog;                  // We change prototype so we need to change constructor

Dog.prototype.gav = function() {
	return 'Dog ' + this.name + ' is saying gav'
}

var dog = new Dog('Aban');
console.log(dog.getName() === 'garfield'); // false
console.log(dog.gav() === 'Dog Aban is saying gav'); // true
console.log(dog.x); // 0
	
